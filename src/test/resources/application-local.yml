spring:
  kafka:
    bootstrap-servers: ${spring.embedded.kafka.brokers}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      group-id: "tiltak"
      auto-offset-reset: earliest # This flag tells Kafka where to start reading offsets in case you do not have any 'commit' yet. In others words, it will start either from the 'earliest' or from the 'latest' if you have not persisted any offset in Zookeeper yet (Manually or using enable.auto.commit flag).
      enable-auto-commit: false # Wether that flag is true, then Kafka is able to commit the message you brought from Kafka using Zookeeper to persist the last 'offset' which it read. This approach is not the best to use when you want a more robust solution for a production system, because does not ensure that the records you brought were correctly processed (using the logic you wrote in your code). If this flag is false, Kafka will not know which was the last offset read so when you restart the process, it will start reading the 'earliest' or the 'latest' offset depending on the value of your next flag (auto.offset.reset).

  datasource:
    url: jdbc:h2:mem:db;DB_CLOSE_DELAY=-1;MODE=PostgreSQL
    username: sa
    password: sa
    driver-class-name: org.h2.Driver

  h2:
    console:
      enabled: true
      path: /h2-console

no.nav.security.jwt:
  issuer:
    aad:
      discoveryurl: https://tiltak-fakelogin.labs.nais.io/metadata?issuer=aad
      accepted_audience: aud-aad
      cookie_name: aad-token
    tokenx:
      discoveryurl: https://tiltak-fakelogin.labs.nais.io/metadata?issuer=tokenx
      accepted_audience: aud-tokenx
      cookie_name: tokenx-token
  client: null

logging:
  level:
    no.nav.arbeidsgiver.tiltakrefusjon: DEBUG

no.nav.gcp.kafka.aiven:
  bootstrap-servers: ${spring.embedded.kafka.brokers}

tiltak-refusjon:
  kafka:
    enabled: false
    fake: true
  kontoregister:
    fake: true
  inntektskomponenten:
    fake: true
  altinn-tilgangstyring:
    uri: http://localhost:8090/altinn-tilgangsstyring
    proxyUri: http://localhost:9090/altinn-rettigheter-proxy/ekstern/altinn/api/serviceowner/reportees
    beOmRettighetBaseUrl: https://arbeidsgiver-q.nav.no/min-side-arbeidsgiver/?fragment=be-om-tilgang
    serviceCode: 4936
    serviceEdition: 1
  abac-tilgangstyring:
    uri: http://localhost:8090/abac-tilgangstyring
    username: na
    password: na
  graph-api:
    uri: ""
    fake: true
