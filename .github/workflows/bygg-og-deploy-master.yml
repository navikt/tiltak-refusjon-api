name: Bygg og deploy master til dev-gcp

on:
  push:
    branches:
      - 'master'

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  GITHUB_REPOSITORY: ${{ github.repository }}
 
jobs:
  bygg:
    name: Bygg
    runs-on: ubuntu-latest
    steps:
      - run: echo "REPOSITORY_NAME=$(echo $GITHUB_REPOSITORY | awk -F / '{print $2}')" >> $GITHUB_ENV
      - run: echo "IMAGE_BASE=$(echo docker.pkg.github.com/$GITHUB_REPOSITORY/$REPOSITORY_NAME)" >> $GITHUB_ENV
      - run: echo "IMAGE=$(echo $IMAGE_BASE:${{ github.sha }})" >> $GITHUB_EN

      - name: Sjekk ut kode
        uses: actions/checkout@v2

      - name: Oppsett Java 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Gjenopprett Maven-cache
        uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Bygg og test med Maven
        run: mvn package -B -Dsurefire.useFile=false

      - name: Bygg, tag og push Docker-image
        run: |
          docker build --tag $IMAGE --tag $IMAGE_BASE:latest .
          echo $GITHUB_TOKEN | docker login docker.pkg.github.com -u $GITHUB_REPOSITORY --password-stdin
          docker push $IMAGE_BASE

  deploy-dev:
    name: Deploy til dev
    runs-on: ubuntu-latest
    needs: bygg
    steps:
      - run: echo "REPOSITORY_NAME=$(echo $GITHUB_REPOSITORY | awk -F / '{print $2}')" >> $GITHUB_ENV
      - run: echo "IMAGE_BASE=$(echo docker.pkg.github.com/$GITHUB_REPOSITORY/$REPOSITORY_NAME)" >> $GITHUB_ENV
      - run: echo "IMAGE=$(echo $IMAGE_BASE:${{ github.sha }})" >> $GITHUB_ENV

      - name: Sjekk ut kode
        uses: actions/checkout@v2

      - name: Deploy til dev-gcp
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          RESOURCE: .nais/nais.yml,.nais/alerts.yml
          VARS: .nais/dev.yml
          PRINT_PAYLOAD: true

  deploy-labs:
    name: Deploy til labs
    runs-on: ubuntu-latest
    needs: bygg
    steps:
      - run: echo "REPOSITORY_NAME=$(echo $GITHUB_REPOSITORY | awk -F / '{print $2}')" >> $GITHUB_ENV
      - run: echo "IMAGE_BASE=$(echo docker.pkg.github.com/$GITHUB_REPOSITORY/$REPOSITORY_NAME)" >> $GITHUB_ENV
      - run: echo "IMAGE=$(echo $IMAGE_BASE:${{ github.sha }})" >> $GITHUB_ENV

      - name: Sjekk ut kode
        uses: actions/checkout@v2

      - name: Generer tiltak-refusjon-api-wiremock configmap
        run: |
          curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x ./kubectl
          ./kubectl create configmap --dry-run=client -o yaml --from-file src/test/resources/mappings -n arbeidsgiver tiltak-refusjon-api-wiremock > .nais/wiremock-mappings.yml
          cat .nais/wiremock-mappings.yml # debug

      - name: Deploy til labs-gcp
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: labs-gcp
          RESOURCE: .nais/nais.yml,.nais/wiremock.yml,.nais/wiremock-mappings.yml
          VAR: deploytrigger=${{ github.run_number }}
          VARS: .nais/labs.yml
          PRINT_PAYLOAD: true