spring:
  main:
    banner-mode: "off"
  datasource:
    platform: postgres
    driver-class-name: org.postgresql.Driver
    url: "jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_DATABASE}?user=${DB_USERNAME}&password=${DB_PASSWORD}"
    hikari:
      connection-test-query: select 1
      maximum-pool-size: 4
  jpa:
    open-in-view: false
  jackson:
    serialization:
      FAIL_ON_EMPTY_BEANS: false

management:
  metrics:
    web:
      server:
        request:
          autotime:
            enabled: true
    enable.executor: true
  health :
    refresh:
      enabled: false
    diskspace:
      enabled: false
  endpoint:
    health:
      show-details : always
  endpoints:
    web:
      exposure:
        include: info, health, metrics, prometheus
      base-path: /internal/actuator

no.nav.security.jwt:
  issuer:
    aad:
      discoveryurl: ${AZURE_APP_WELL_KNOWN_URL}
      accepted_audience: ${AZURE_APP_CLIENT_ID}, api://${AZURE_APP_CLIENT_ID}
    tokenx:
      discoveryurl: ${TOKEN_X_WELL_KNOWN_URL}
      accepted_audience: ${TOKEN_X_CLIENT_ID}
  client:
    registration:
      aad:
        token-endpoint-url: https://login.microsoftonline.com/${AZURE_APP_TENANT_ID}/oauth2/v2.0/token
        grant-type: urn:ietf:params:oauth:grant-type:jwt-bearer
        scope: api://${PROXY_CLIENT_ID}}/.default
        authentication:
          client-id: ${AZURE_APP_CLIENT_ID}
          client-secret: ${AZURE_APP_CLIENT_SECRET}
          client-auth-method: client_secret_basic
      aad-anonym:
        token-endpoint-url: https://login.microsoftonline.com/${AZURE_APP_TENANT_ID}/oauth2/v2.0/token
        grant-type: client_credentials
        scope: api://${PROXY_CLIENT_ID}}/.default
        authentication:
          client-id: ${AZURE_APP_CLIENT_ID}
          client-secret: ${AZURE_APP_CLIENT_SECRET}
          client-auth-method: client_secret_basic
      tokenx:
        token-endpoint-url: https://tokendings.dev-gcp.nais.io/token
        grant-type: urn:ietf:params:oauth:grant-type:token-exchange
        authentication:
          client-id: ${TOKEN_X_CLIENT_ID}
          client-jwk: /var/run/secrets/nais.io/jwker/TOKEN_X_PRIVATE_JWK
          client-auth-method: private_key_jwt
        token-exchange:
          audience: "dev-fss:arbeidsgiver:tiltak-proxy"

tiltak-refusjon:
  altinn-tilgangstyring:
    altinnApiKey: ${ALTINN_API_KEY}
    apiGwApiKey: ${ALTINN_API_GW_API_KEY}
  graph-api:
    uri: "https://graph.microsoft.com/v1.0/me?$select=onPremisesSamAccountName"
