spring:
  kafka:
    bootstrap-servers: ${KAFKA_BROKERS}
    properties:
      security.protocol: SSL
      ssl:
        keystore:
          type: PKCS12
          location: ${KAFKA_KEYSTORE_PATH}
          password: ${KAFKA_CREDSTORE_PASSWORD}
        truststore:
          location: ${KAFKA_TRUSTSTORE_PATH}
          password: ${KAFKA_CREDSTORE_PASSWORD}
        endpoint.identification.algorithm:
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      group-id: "tiltak"
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      auto-offset-reset: earliest # Wether that flag is true, then Kafka is able to commit the message you brought from Kafka using Zookeeper to persist the last 'offset' which it read. This approach is not the best to use when you want a more robust solution for a production system, because does not ensure that the records you brought were correctly processed (using the logic you wrote in your code). If this flag is false, Kafka will not know which was the last offset read so when you restart the process, it will start reading the 'earliest' or the 'latest' offset depending on the value of your next flag (auto.offset.reset).
      enable-auto-commit: false # This flag tells Kafka where to start reading offsets in case you do not have any 'commit' yet. In others words, it will start either from the 'earliest' or from the 'latest' if you have not persisted any offset in Zookeeper yet (Manually or using enable.auto.commit flag).

tiltak-refusjon:
  kontoregister:
    uri: https://tiltak-proxy.dev-fss-pub.nais.io/kontoregister/api/v1/hent-kontonr-org/
    consumer-id: tiltak-refusjon-api
  inntektskomponenten:
    uri: https://tiltak-proxy.dev-fss-pub.nais.io/inntektskomponenten-ws/rs/api/v1/hentinntektliste
    filter: KontrollArbeidsmarkedstiltakA-inntekt
    consumer-id: tiltak-refusjon-api
  altinn-tilgangstyring:
    uri: https://api-gw-q0.oera.no/ekstern/altinn/api/serviceowner/reportees
    beOmRettighetBaseUrl: https://arbeidsgiver-q.nav.no/min-side-arbeidsgiver/?fragment=be-om-tilgang
    serviceCode: 4936
    serviceEdition: 1
  abac-tilgangstyring:
    uri: https://wasapp-q0.adeo.no/asm-pdp/authorize
    username: TODO
    password: TODO